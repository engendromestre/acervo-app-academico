name: Test and Deploy Laravel App to Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: "Production"
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: ${{ secrets.TEST_MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.TEST_MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.TEST_MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_MYSQL_ROOT_PASSWORD }}
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1.29
          extensions: curl, mbstring, zip, pcntl, pdo, pdo_mysql, iconv
          coverage: xdebug

      - name: Verify MySQL connection
        run: |
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uuser -psecret -e "SHOW DATABASES"

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json"

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        uses: ./.github/actions/composer

      - name: Config Laravel
        uses: ./.github/actions/config-laravel

      - name: Run NPM
        run: |
          npm ci
          npm run build

      - name: Run Test with Pest
        env:
          APP_SUPERADMIN: ${{ secrets.APP_SUPERADMIN }}
          APP_ADMIN: ${{ secrets.APP_ADMIN }}
          APP_USER: ${{ secrets.APP_USER }}
          DB_CONNECTION: mysql
          DB_DATABASE: testdatabase
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: root
        run: |
          php artisan migrate:fresh --seed
          ./vendor/bin/pest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, bcmath, intl, pdo_mysql

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.15.1"

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json"

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip -o release.zip

      - name: Install NPM dependencies and build assets
        run: |
          npm install
          npm run build

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_62A15ACE30934BEE90EDF29639177273 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5BE0E9AC31EA48F5879DB79D2D00C298 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_210CABA748C5412EAC749313B246CFEF }}

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: "acervo-app2"
          slot-name: "Production"
          package: .
